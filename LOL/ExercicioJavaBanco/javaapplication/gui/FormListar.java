/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication.gui;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javaapplication.Fachada;
import javaapplication.Funcionario;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Douglas
 */
public class FormListar extends javax.swing.JFrame {
Fachada proxCamada;
ArrayList<Funcionario> ArrayExibidor;
    /**
     * Creates new form FormListar
     */
    public FormListar() {
        initComponents();
        proxCamada = new Fachada();
        PreecherTabela();
    }
public void PreecherTabela(){
    
    try {
        ArrayExibidor = proxCamada.listarFunc();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"Matricula","Nome","CPF","RG"});
        for (int i = 0; i < proxCamada.listarFunc().size() ; i++) {
            modelo.addRow(new String[]{ArrayExibidor.get(i).getMatricula()+"", ArrayExibidor.get(i).getNome(), ArrayExibidor.get(i).getCpf()
            ,ArrayExibidor.get(i).getRg()});
            
        }
        TabelaListagem.setModel(modelo);
    } catch (Exception ex) {
JOptionPane.showMessageDialog(jTextContains, ex.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaListagem = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextstartsWith = new javax.swing.JTextField();
        jTextEndsWith = new javax.swing.JTextField();
        jTextContains = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Funcionários");

        TabelaListagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TabelaListagem);

        jLabel2.setText("Listar Funcionarios começados com:");

        jLabel3.setText("Listar Funcionarios terminados com:");

        jLabel4.setText("Listar Funcionarios que contem:");

        jTextstartsWith.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextstartsWithActionPerformed(evt);
            }
        });
        jTextstartsWith.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextstartsWithKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextstartsWithKeyTyped(evt);
            }
        });

        jTextEndsWith.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextEndsWithKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextEndsWithKeyTyped(evt);
            }
        });

        jTextContains.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextContainsActionPerformed(evt);
            }
        });
        jTextContains.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextContainsKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextstartsWith)
                                    .addComponent(jTextEndsWith)
                                    .addComponent(jTextContains, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextstartsWith, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextEndsWith, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextContains, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextContainsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextContainsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextContainsActionPerformed

    private void jTextstartsWithActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextstartsWithActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextstartsWithActionPerformed

    private void jTextstartsWithKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextstartsWithKeyTyped
    try {
        ArrayList<Funcionario> Exibidor = proxCamada.listarFuncPrefix(jTextstartsWith.getText().trim().toUpperCase());
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"Matricula","Nome","CPF","RG"});
        for (int i = 0; i < proxCamada.listarFunc().size() ; i++) {
            modelo.addRow(new String[]{Exibidor.get(i).getMatricula()+"", Exibidor.get(i).getNome(), Exibidor.get(i).getCpf()
            ,Exibidor.get(i).getRg()});
            
        }
        TabelaListagem.setModel(modelo);
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(jTextContains, ex.getMessage());
    }
    }//GEN-LAST:event_jTextstartsWithKeyTyped

    private void jTextEndsWithKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextEndsWithKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEndsWithKeyTyped

    private void jTextstartsWithKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextstartsWithKeyReleased
   try {
        ArrayList<Funcionario> Exibidor = proxCamada.listarFuncPrefix(jTextstartsWith.getText().trim().toUpperCase());
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"Matricula","Nome","CPF","RG"});
        for (int i = 0; i < proxCamada.listarFuncPrefix(jTextstartsWith.getText().trim().toUpperCase()).size() ; i++) {
            modelo.addRow(new String[]{Exibidor.get(i).getMatricula()+"", Exibidor.get(i).getNome(), Exibidor.get(i).getCpf()
            ,Exibidor.get(i).getRg()});
            
        }
        TabelaListagem.setModel(modelo);
        
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(jTextContains, ex.getMessage());
    }
    }//GEN-LAST:event_jTextstartsWithKeyReleased

    private void jTextEndsWithKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextEndsWithKeyReleased
       try {
        ArrayList<Funcionario> Exibidor = proxCamada.listarFuncSufix(jTextEndsWith.getText().trim().toUpperCase());
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"Matricula","Nome","CPF","RG"});
        for (int i = 0; i < proxCamada.listarFuncSufix(jTextEndsWith.getText().trim().toUpperCase()).size() ; i++) {
            modelo.addRow(new String[]{Exibidor.get(i).getMatricula()+"", Exibidor.get(i).getNome(), Exibidor.get(i).getCpf()
            ,Exibidor.get(i).getRg()});
            
        }
        TabelaListagem.setModel(modelo);
        
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(jTextContains, ex.getMessage());
    }
    }//GEN-LAST:event_jTextEndsWithKeyReleased

    private void jTextContainsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextContainsKeyReleased
      try {
        ArrayList<Funcionario> Exibidor = proxCamada.listarFuncWith(jTextContains.getText().trim().toUpperCase());
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(new String[]{"Matricula","Nome","CPF","RG"});
        for (int i = 0; i < proxCamada.listarFuncWith(jTextContains.getText().trim().toUpperCase()).size() ; i++) {
            modelo.addRow(new String[]{Exibidor.get(i).getMatricula()+"", Exibidor.get(i).getNome(), Exibidor.get(i).getCpf()
            ,Exibidor.get(i).getRg()});
            
        }
        TabelaListagem.setModel(modelo);
        
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(jTextContains, ex.getMessage());
    }
    }//GEN-LAST:event_jTextContainsKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormListar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormListar().setVisible(true);
            }
        });
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaListagem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextContains;
    private javax.swing.JTextField jTextEndsWith;
    private javax.swing.JTextField jTextstartsWith;
    // End of variables declaration//GEN-END:variables
}
